{"version":3,"file":"static/js/298.e1df1dd6.chunk.js","mappings":"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","sources":["components/BasicCustomer/BasicDotSpinner/BasicDotSpinner.js","components/BasicCustomer/BasicOrderHistory/BasicOrderHistory.js"],"sourcesContent":["import React from 'react';\r\nimport './BasicDotSpinner.css'; // Make sure to import the CSS file\r\n \r\nconst BasicDotSpinner = () => {\r\n  return (\r\n    // <div className=\"dot-spinner-container\">\r\n      <div className=\"dot-spinnerb26\">\r\n        {Array.from({ length: 8 }, (_, index) => (\r\n          <div key={index} className={`dot-spinner__dotb26 dot-spinner__dotb26--${index + 1}`}></div>\r\n        ))}\r\n      </div>\r\n    // </div>\r\n  );\r\n};\r\n \r\nexport default BasicDotSpinner;","import React, { useEffect, useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport './BasicOrderHistory.css';\r\nimport DotSpinner from '../BasicDotSpinner/BasicDotSpinner';\r\n \r\nconst BasicOrderHistory = () => {\r\n  const [orderDetails, setOrderDetails] = useState([]);\r\n  const [error, setError] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [modalOpen, setModalOpen] = useState(false);\r\n  const [invoiceData, setInvoiceData] = useState(null);\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const itemsPerPage = 7; // Number of items to display per page\r\n  const navigate = useNavigate();\r\n \r\n  const fetchOrder = async () => {\r\n    const token = localStorage.getItem('authToken');\r\n \r\n    try {\r\n      const response = await fetch(`https://prasad-gz5p.onrender.com/api/order-history/`, {\r\n        headers: { 'Authorization': `Token ${token}` },\r\n      });\r\n \r\n      if (!response.ok) {\r\n        throw new Error(`Failed to fetch order history`);\r\n      }\r\n \r\n      const orderData = await response.json();\r\n      // Reverse the order data to show newest first\r\n      setOrderDetails(orderData.orders ? orderData.orders.reverse() : []);\r\n      setError(null);\r\n    } catch (error) {\r\n      setError(error.message);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n \r\n  const viewInvoice = async (orderId) => {\r\n    const token = localStorage.getItem('authToken');\r\n    try {\r\n      const response = await fetch(`https://prasad-gz5p.onrender.com/api/view-invoice/${orderId}/`, {\r\n        headers: { 'Authorization': `Token ${token}` },\r\n      });\r\n \r\n      if (!response.ok) {\r\n        throw new Error(`Failed to get Invoice`);\r\n      }\r\n \r\n      const invoiceData = await response.json();\r\n      setInvoiceData(invoiceData);\r\n      setModalOpen(true);\r\n      setError(null);\r\n    } catch (error) {\r\n      setError(error.message);\r\n    }\r\n  };\r\n \r\n  const handleViewInvoice = (orderId) => {\r\n    viewInvoice(orderId);\r\n  };\r\n \r\n  const closeModal = () => {\r\n    setModalOpen(false);\r\n    setInvoiceData(null);\r\n  };\r\n \r\n  // Pagination Logic\r\n  const indexOfLastOrder = currentPage * itemsPerPage;\r\n  const indexOfFirstOrder = indexOfLastOrder - itemsPerPage;\r\n  const currentOrders = orderDetails.slice(indexOfFirstOrder, indexOfLastOrder);\r\n  const totalPages = Math.ceil(orderDetails.length / itemsPerPage);\r\n \r\n  const handleNextPage = () => {\r\n    if (currentPage < totalPages) {\r\n      setCurrentPage(prevPage => prevPage + 1);\r\n    }\r\n  };\r\n \r\n  const handlePreviousPage = () => {\r\n    if (currentPage > 1) {\r\n      setCurrentPage(prevPage => prevPage - 1);\r\n    }\r\n  };\r\n \r\n  useEffect(() => {\r\n    fetchOrder(); // Fetch order history on component mount\r\n  }, []);\r\n \r\n  return (\r\n    <div className=\"order-historyb24\">\r\n      <div className='order-history-containerb24'>\r\n        <p className=\"order-history-title-b24\">Your Order History</p>\r\n        <button onClick={() => navigate('/bbrands')} className=\"back-button999b24\">\r\n          Back to Home\r\n        </button>\r\n      </div>\r\n      <div className='order-history1b24'>\r\n        {loading ? (\r\n          <div className='order-spinnerb24'><DotSpinner /></div>\r\n        ) : (\r\n          <>\r\n            {error && <p className=\"error-messageb24\">{error}</p>}\r\n            {orderDetails.length > 0 ? (\r\n              <>\r\n                <table className=\"order-tableb24\">\r\n                  <thead>\r\n                    <tr>\r\n                      <th>Order ID</th>\r\n                      <th>Price of Products</th>\r\n                      <th>Action</th>\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                    {currentOrders.map((item, index) => (\r\n                      <tr key={index} className=\"order-itemb24\">\r\n                        <td>{item.id}</td>\r\n                        <td>â‚¹{item.price}</td>\r\n                        <td>\r\n                          <button\r\n                            className=\"view-invoice-buttonb24\"\r\n                            onClick={() => handleViewInvoice(item.id)}\r\n                          >\r\n                            View Invoice\r\n                          </button>\r\n                        </td>\r\n                      </tr>\r\n                    ))}\r\n                  </tbody>\r\n                </table>\r\n                <div className=\"pagination-controlsb24\">\r\n                  <button onClick={handlePreviousPage} disabled={currentPage === 1}>\r\n                    Previous\r\n                  </button>\r\n                  <span>Page {currentPage} of {totalPages}</span>\r\n                  <button onClick={handleNextPage} disabled={currentPage === totalPages}>\r\n                    Next\r\n                  </button>\r\n                </div>\r\n              </>\r\n            ) : (\r\n              <p>Your order history is empty</p>\r\n            )}\r\n          </>\r\n        )}\r\n      </div>\r\n \r\n      {/* Modal for displaying invoice details */}\r\n      {modalOpen && (\r\n  <div className=\"modal-overlayb24\" onClick={closeModal}>\r\n    <div className=\"modal-contentb24\" onClick={(e) => e.stopPropagation()}>\r\n      <h2>Invoice Details</h2>\r\n      {invoiceData && (\r\n        <>\r\n          <h3>Invoice ID: {invoiceData.invoice_id}</h3>\r\n          <table className=\"invoice-tableb24\">\r\n            <thead>\r\n              <tr>\r\n                <th>Product ID</th>\r\n                <th>Quantity</th>\r\n                <th>Total Price</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {invoiceData.items.slice().reverse().map((item, index) => (\r\n                <tr key={index}>\r\n                  <td>{item.product_id}</td>\r\n                  <td>{item.quantity}</td>\r\n                  <td>â‚¹{item.total_price}</td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </table>\r\n        </>\r\n      )}\r\n      <button className=\"close-buttonb24\" onClick={closeModal}>Close</button>\r\n    </div>\r\n  </div>\r\n)}\r\n \r\n    </div>\r\n  );\r\n};\r\n \r\nexport default BasicOrderHistory;"],"names":["BasicDotSpinner","_jsx","className","children","Array","from","length","_","index","BasicOrderHistory","orderDetails","setOrderDetails","useState","error","setError","loading","setLoading","modalOpen","setModalOpen","invoiceData","setInvoiceData","currentPage","setCurrentPage","navigate","useNavigate","handleViewInvoice","orderId","async","token","localStorage","getItem","response","fetch","headers","ok","Error","json","message","viewInvoice","closeModal","indexOfLastOrder","indexOfFirstOrder","currentOrders","slice","totalPages","Math","ceil","useEffect","orderData","orders","reverse","fetchOrder","_jsxs","onClick","DotSpinner","_Fragment","map","item","id","price","handlePreviousPage","prevPage","disabled","handleNextPage","e","stopPropagation","invoice_id","items","product_id","quantity","total_price"],"sourceRoot":""}