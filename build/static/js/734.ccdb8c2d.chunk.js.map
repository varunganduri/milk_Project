{"version":3,"file":"static/js/734.ccdb8c2d.chunk.js","mappings":"4JAIA,MAuDA,EAvDsBA,KACpB,MAAMC,GAAWC,EAAAA,EAAAA,OACX,KAAEC,EAAI,WAAEC,GAAeH,EAASI,OAAS,CAAC,EAC1CC,GAAWC,EAAAA,EAAAA,MA+BjB,OACEC,EAAAA,EAAAA,MAAA,OAAKC,UAAU,cAAaC,SAAA,EAC1BC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,aACHP,GAAQA,EAAKS,OAAS,GACrBJ,EAAAA,EAAAA,MAAAK,EAAAA,SAAA,CAAAH,SAAA,EACEC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,qBACHP,EAAKW,KAAI,CAACC,EAAMC,KACfR,EAAAA,EAAAA,MAAA,OAAKC,UAAU,eAAcC,SAAA,CAAa,eAC3BK,EAAKE,GAAG,mBAAYF,EAAKG,MAAM,iCAA0BH,EAAKG,QAD1CF,MAIrCR,EAAAA,EAAAA,MAAA,OAAKC,UAAU,iBAAgBC,SAAA,CAAC,sBAAeN,MAC/CO,EAAAA,EAAAA,KAAA,UAAQQ,QAzCWC,UACzB,MAAMC,EAAc,CAClBC,aAAc,qBACdC,aAAc,aACdC,qBAAsB,GACtBC,aAAa,IAAIC,MAAOC,cAAcC,MAAM,KAAK,GACjDV,MAAOd,EAAWyB,YAGpB,IACE,MAAMC,QAAiBC,MAAM,iDAAkD,CAC7EC,OAAQ,OACRC,QAAS,CACP,eAAgB,oBAElBC,KAAMC,KAAKC,UAAUf,KAGvB,IAAKS,EAASO,GACZ,MAAM,IAAIC,MAAM,+BAGlB,MAAMC,QAAaT,EAASU,OAC5BlC,EAAS,aAAaiC,EAAKtB,KAC7B,CAAE,MAAOwB,GACPC,QAAQD,MAAM,0BAA2BA,EAC3C,GAe0C/B,SAAC,gBAGvCC,EAAAA,EAAAA,KAAA,KAAAD,SAAG,0BAED,C","sources":["components/BasicCustomer/BasicCheckout/BasicCheckout.js"],"sourcesContent":["import React from 'react';\r\nimport { useLocation, useNavigate } from 'react-router-dom';\r\nimport './BasicCheckout.css'; // Import the CSS file\r\n \r\nconst BasicCheckout = () => {\r\n  const location = useLocation();\r\n  const { cart, totalPrice } = location.state || {};\r\n  const navigate = useNavigate();\r\n \r\n  const handleInvoiceClick = async () => {\r\n    const invoiceData = {\r\n      supplierName: \"Supplier Name Here\",\r\n      customerName: \"8888888888\",\r\n      customerMobileNumber: \"\",\r\n      invoiceDate: new Date().toISOString().split('T')[0],\r\n      price: totalPrice.toString(),\r\n    };\r\n \r\n    try {\r\n      const response = await fetch('https://prasad-gz5p.onrender.com/api/invoices/', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify(invoiceData),\r\n      });\r\n \r\n      if (!response.ok) {\r\n        throw new Error('Network response was not ok');\r\n      }\r\n \r\n      const data = await response.json();\r\n      navigate(`/binvoice/${data.id}`);\r\n    } catch (error) {\r\n      console.error('Error creating invoice:', error);\r\n    }\r\n  };\r\n \r\n  return (\r\n    <div className=\"checkoutb27\">\r\n      <h1>Checkout</h1>\r\n      {cart && cart.length > 0 ? (\r\n        <>\r\n          <h2>Your Cart Items:</h2>\r\n          {cart.map((item, index) => (\r\n            <div className=\"cart-itemb27\" key={index}>\r\n              Product ID: {item.id} - Price: ₹{item.price} - Quantity: 1 - Total: ₹{item.price}\r\n            </div>\r\n          ))}\r\n          <div className=\"total-priceb27\">Total Price: ₹{totalPrice}</div>\r\n          <button onClick={handleInvoiceClick}>Invoice</button>\r\n        </>\r\n      ) : (\r\n        <p>Your cart is empty.</p>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n \r\nexport default BasicCheckout;"],"names":["BasicCheckout","location","useLocation","cart","totalPrice","state","navigate","useNavigate","_jsxs","className","children","_jsx","length","_Fragment","map","item","index","id","price","onClick","async","invoiceData","supplierName","customerName","customerMobileNumber","invoiceDate","Date","toISOString","split","toString","response","fetch","method","headers","body","JSON","stringify","ok","Error","data","json","error","console"],"sourceRoot":""}