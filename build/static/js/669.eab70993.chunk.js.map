{"version":3,"file":"static/js/669.eab70993.chunk.js","mappings":"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","sources":["components/Customer/CustomerApp.js"],"sourcesContent":["// import React, { useEffect, useState } from 'react';\r\n\r\n\r\n\r\n// import { BrowserRouter as Router, Routes, Route, Navigate } from 'react-router-dom';\r\n// import Register from '../Customer/Register/Register';\r\n// import CustomerHome from '../Customer/CustomerHome/CustomerHome';\r\n// import Login from '../Customer/Login/Login';\r\n// // import PaymentPage from './components/PaymentPage/PaymentPage.js';\r\n// //import SupplierCustomerHome from './SupplierCustomerHome';\r\n\r\n\r\n// import ViewCart from '../Customer/ViewCart/ViewCart';\r\n// import Checkout from '../Customer/Checkout/Checkout';\r\n// import Invoice from '../Customer/Invoice/Invoice';\r\n// import Navbar from '../Customer/Navbar/Navbar';\r\n\r\n// import Brands from '../Customer/Brands/Brands';\r\n// import ProductList from '../Customer/ProductList/ProductList';\r\n// import Supplier from '../Customer/Supplier/Supplier';\r\n// import OrderHistory from '../Customer/OrderHistory/OrderHistory';\r\n\r\n// const CustomerApp = () => {\r\n//   const [customerDetails, setCustomerDetails] = useState({ username: '', mobile_number: '' });\r\n//   const [isAuthenticated, setIsAuthenticated] = useState(!!localStorage.getItem('authToken'));\r\n//   const [error, setError] = useState(null);\r\n \r\n//   const fetchCustomerDetails = async () => {\r\n//     const token = localStorage.getItem('authToken');\r\n//     try {\r\n//       const response = await fetch('https://prasad-gz5p.onrender.com/api/user/details/', {\r\n//         headers: { 'Authorization': `Token ${token}` },\r\n//       });\r\n \r\n//       if (!response.ok) {\r\n//         throw new Error(`Failed to fetch customer details`);\r\n//       }\r\n \r\n//       const data = await response.json();\r\n//       setCustomerDetails({ username: data.username, mobile_number: data.mobile_number });\r\n//     } catch (error) {\r\n//       setError(error.message);\r\n//     }\r\n//   };\r\n \r\n//   useEffect(() => {\r\n//     if (isAuthenticated) {\r\n//       fetchCustomerDetails();\r\n//     }\r\n//   }, [isAuthenticated]);\r\n \r\n//   const handleLogout = async () => {\r\n//     const token = localStorage.getItem('authToken');\r\n \r\n//     try {\r\n//       await fetch('https://prasad-gz5p.onrender.com/api/logout/', {\r\n//         method: 'POST',\r\n//         headers: {\r\n//           'Authorization': `Token ${token}`,\r\n//           'Content-Type': 'application/json',\r\n//         },\r\n//       });\r\n//       localStorage.removeItem('authToken');\r\n//       setIsAuthenticated(false); // Update authentication state\r\n//     } catch (error) {\r\n//       console.error('Logout failed:', error);\r\n//     }\r\n//   };\r\n \r\n//   const handleLoginSuccess = () => {\r\n//     setIsAuthenticated(true);\r\n//   };\r\n \r\n//   return (\r\n//     <>\r\n//       {isAuthenticated && (\r\n//         <Navbar  \r\n//           userName={customerDetails.username}\r\n//           onLogout={handleLogout}\r\n//           className=\"nav-styles\"\r\n//         />\r\n//       )}\r\n   \r\n//       <Routes>\r\n//         <Route path=\"/\" element={<Navigate to={isAuthenticated ? \"/customer-home\" : \"/login\"} />} />\r\n//         <Route path=\"/login\" element={isAuthenticated ? <Navigate to=\"/customer-home\" /> : <Login onLoginSuccess={handleLoginSuccess} />} />\r\n//         <Route path=\"/register\" element={ <Register/> } />\r\n//         <Route path=\"/customer-home\" element={isAuthenticated ? <CustomerHome /> : <Navigate to=\"/login\" />} />\r\n//         <Route path=\"/order-history\" element={isAuthenticated ? <OrderHistory /> : <Navigate to=\"/login\" />} />\r\n//         <Route path=\"/view-cart\" element={isAuthenticated ? <ViewCart /> : <Navigate to=\"/login\" />} />\r\n//         <Route path=\"/checkout\" element={isAuthenticated ? <Checkout /> : <Navigate to=\"/login\" />} />\r\n//         <Route path=\"/invoice\" element={isAuthenticated ? <Invoice /> : <Navigate to=\"/login\" />} />\r\n//         <Route path=\"/supplier\" element={isAuthenticated ? <Supplier /> : <Navigate to=\"/login\" />} />\r\n//         <Route path=\"/brands\" element={<Brands />} />\r\n//         <Route path=\"/products\" element={isAuthenticated ? <ProductList /> : <Navigate to=\"/login\" />} />\r\n//       </Routes>\r\n//     </>\r\n//   );\r\n// };\r\n \r\n// export default CustomerApp;\r\n\r\n\r\nimport React, { useEffect, useState, lazy, Suspense } from 'react';\r\nimport { BrowserRouter as Router, Routes, Route, Navigate } from 'react-router-dom';\r\n\r\nconst Register = lazy(() => import('../Customer/Register/Register'));\r\nconst CustomerHome = lazy(() => import('../Customer/CustomerHome/CustomerHome'));\r\nconst Login = lazy(() => import('../Customer/Login/Login'));\r\nconst ViewCart = lazy(() => import('../Customer/ViewCart/ViewCart'));\r\nconst Checkout = lazy(() => import('../Customer/Checkout/Checkout'));\r\nconst Invoice = lazy(() => import('../Customer/Invoice/Invoice'));\r\nconst Navbar = lazy(() => import('../Customer/Navbar/Navbar'));\r\nconst Brands = lazy(() => import('../Customer/Brands/Brands'));\r\nconst ProductList = lazy(() => import('../Customer/ProductList/ProductList'));\r\nconst Supplier = lazy(() => import('../Customer/Supplier/Supplier'));\r\nconst OrderHistory = lazy(() => import('../Customer/OrderHistory/OrderHistory'));\r\n\r\nconst CustomerApp = () => {\r\n  const [customerDetails, setCustomerDetails] = useState({ username: '', mobile_number: '' });\r\n  const [isAuthenticated, setIsAuthenticated] = useState(!!localStorage.getItem('authToken'));\r\n  const [error, setError] = useState(null);\r\n\r\n  const fetchCustomerDetails = async () => {\r\n    const token = localStorage.getItem('authToken');\r\n    try {\r\n      const response = await fetch('https://prasad-gz5p.onrender.com/api/user/details/', {\r\n        headers: { 'Authorization': `Token ${token}` },\r\n      });\r\n\r\n      if (!response.ok) {\r\n        throw new Error(`Failed to fetch customer details`);\r\n      }\r\n\r\n      const data = await response.json();\r\n      setCustomerDetails({ username: data.username, mobile_number: data.mobile_number });\r\n    } catch (error) {\r\n      setError(error.message);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (isAuthenticated) {\r\n      fetchCustomerDetails();\r\n    }\r\n  }, [isAuthenticated]);\r\n\r\n  const handleLogout = async () => {\r\n    const token = localStorage.getItem('authToken');\r\n\r\n    try {\r\n      await fetch('https://prasad-gz5p.onrender.com/api/logout/', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Authorization': `Token ${token}`,\r\n          'Content-Type': 'application/json',\r\n        },\r\n      });\r\n      localStorage.removeItem('authToken');\r\n      setIsAuthenticated(false); // Update authentication state\r\n    } catch (error) {\r\n      console.error('Logout failed:', error);\r\n    }\r\n  };\r\n\r\n  const handleLoginSuccess = () => {\r\n    setIsAuthenticated(true);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Suspense fallback={<div>Loading...</div>}>\r\n        {isAuthenticated && (\r\n          <Navbar  \r\n            userName={customerDetails.username}\r\n            onLogout={handleLogout}\r\n            className=\"nav-styles\"\r\n          />\r\n        )}\r\n\r\n        <Routes>\r\n          <Route path=\"/\" element={<Navigate to={isAuthenticated ? \"/customer-home\" : \"/login\"} />} />\r\n          <Route path=\"/login\" element={isAuthenticated ? <Navigate to=\"/customer-home\" /> : <Login onLoginSuccess={handleLoginSuccess} />} />\r\n          <Route path=\"/register\" element={<Register />} />\r\n          <Route path=\"/customer-home\" element={isAuthenticated ? <CustomerHome /> : <Navigate to=\"/login\" />} />\r\n          <Route path=\"/order-history\" element={isAuthenticated ? <OrderHistory /> : <Navigate to=\"/login\" />} />\r\n          <Route path=\"/view-cart\" element={isAuthenticated ? <ViewCart /> : <Navigate to=\"/login\" />} />\r\n          <Route path=\"/checkout\" element={isAuthenticated ? <Checkout /> : <Navigate to=\"/login\" />} />\r\n          <Route path=\"/invoice\" element={isAuthenticated ? <Invoice /> : <Navigate to=\"/login\" />} />\r\n          <Route path=\"/supplier\" element={isAuthenticated ? <Supplier /> : <Navigate to=\"/login\" />} />\r\n          <Route path=\"/brands\" element={<Brands />} />\r\n          <Route path=\"/products\" element={isAuthenticated ? <ProductList /> : <Navigate to=\"/login\" />} />\r\n        </Routes>\r\n      </Suspense>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CustomerApp;\r\n"],"names":["Register","lazy","CustomerHome","Login","ViewCart","Checkout","Invoice","Navbar","Brands","ProductList","Supplier","OrderHistory","CustomerApp","customerDetails","setCustomerDetails","useState","username","mobile_number","isAuthenticated","setIsAuthenticated","localStorage","getItem","error","setError","useEffect","async","token","response","fetch","headers","ok","Error","data","json","message","fetchCustomerDetails","_jsx","_Fragment","children","_jsxs","Suspense","fallback","userName","onLogout","method","removeItem","console","className","Routes","Route","path","element","Navigate","to","onLoginSuccess","handleLoginSuccess"],"sourceRoot":""}