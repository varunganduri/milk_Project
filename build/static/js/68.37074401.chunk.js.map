{"version":3,"file":"static/js/68.37074401.chunk.js","mappings":"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","sources":["components/Admin/adminNavbar/AdminNavbar.js","components/Admin/AdminApp.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { Link, useLocation } from 'react-router-dom';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faUserCircle } from '@fortawesome/free-solid-svg-icons'; // Updated import\r\nimport './AdminNavbar.css';\r\n\r\nfunction AdminNavbar({ userName, onLogout }) {\r\n  const [dropdownOpen, setDropdownOpen] = useState(false);\r\n  const location = useLocation();\r\n\r\n  const toggleDropdown = () => {\r\n    setDropdownOpen(!dropdownOpen);\r\n  };\r\n\r\n  const isActive = (path) => location.pathname === path;\r\n\r\n  return (\r\n    <nav className=\"admin-navbar\">\r\n      <div className=\"navbar-content\">\r\n        <div className=\"user-name\">Welcome {userName}</div>\r\n        <div className=\"menu-buttons\">\r\n          <Link to=\"/Admin-Home\" className={`menu-button ${isActive('/Admin-Home') ? 'active' : ''}`}>Home</Link>\r\n          <Link to=\"/brands\" className={`menu-button ${isActive('/brands') ? 'active' : ''}`}>Brands</Link>\r\n          <Link to=\"/customer-data\" className={`menu-button ${isActive('/customer-data') ? 'active' : ''}`}>Suppliers</Link>\r\n          <Link to=\"/order-history\" className={`menu-button ${isActive('/order-history') ? 'active' : ''}`}>Order History</Link>\r\n          \r\n          <div className=\"profile-icon\" onClick={toggleDropdown}>\r\n            <FontAwesomeIcon icon={faUserCircle} size=\"xl\" />\r\n            {dropdownOpen && (\r\n              <div className=\"dropdown\">\r\n                <div className=\"dropdown-item\">{userName}</div>\r\n                <div className=\"dropdown-item\" onClick={onLogout}>Logout</div>\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n}\r\n\r\nexport default AdminNavbar;\r\n","import React, { useEffect, useState, lazy, Suspense } from 'react';\nimport { Routes, Route, Navigate } from 'react-router-dom';\nimport AdminNavbar from './adminNavbar/AdminNavbar';\n\n// Lazy load components\nconst AdminHome = lazy(() => import('./adminHome/AdminHome'));\nconst BrandList = lazy(() => import('./adminHome/brands/BrandList'));\nconst CustomersData = lazy(() => import('./adminHome/customers/CustomersData'));\nconst OrderHistory = lazy(() => import('./adminHome/orderHistory/OrderHistory'));\nconst ProductList = lazy(() => import('./adminHome/products/ProductList'));\nconst Login = lazy(() => import('../Customer/Login/Login'));\nconst Register = lazy(() => import('../Customer/Register/Register'));\n\nconst AdminApp = () => {\n  const [customerDetails, setCustomerDetails] = useState({ username: '', mobile_number: '' });\n  const [isAuthenticated, setIsAuthenticated] = useState(!!localStorage.getItem('authToken'));\n  const [error, setError] = useState(null);\n\n  const fetchCustomerDetails = async () => {\n    const token = localStorage.getItem('authToken');\n    try {\n      const response = await fetch('https://prasad-gz5p.onrender.com/api/user/details/', {\n        headers: { 'Authorization': `Token ${token}` },\n      });\n\n      if (!response.ok) {\n        throw new Error(`Failed to fetch customer details`);\n      }\n\n      const data = await response.json();\n      setCustomerDetails({ username: data.username, mobile_number: data.mobile_number });\n    } catch (error) {\n      setError(error.message);\n    }\n  };\n\n  useEffect(() => {\n    if (isAuthenticated) {\n      fetchCustomerDetails();\n    }\n  }, [isAuthenticated]);\n\n  const handleLogout = async () => {\n    const token = localStorage.getItem('authToken');\n\n    try {\n      await fetch('https://prasad-gz5p.onrender.com/api/logout/', {\n        method: 'POST',\n        headers: {\n          'Authorization': `Token ${token}`,\n          'Content-Type': 'application/json',\n        },\n      });\n      localStorage.removeItem('authToken');\n      setIsAuthenticated(false); // Update authentication state\n    } catch (error) {\n      console.error('Logout failed:', error);\n    }\n  };\n\n  const handleLoginSuccess = () => {\n    setIsAuthenticated(true);\n  };\n\n  return (\n    <>\n      {isAuthenticated && (\n        <AdminNavbar  \n          userName={customerDetails.username}\n          onLogout={handleLogout}\n        />\n      )}\n      <Suspense fallback={<div>Loading...</div>}>\n        <Routes>\n          <Route path=\"/register\" element={<Register />} />\n          <Route path=\"/login\" element={isAuthenticated ? <Navigate to=\"/Admin-Home\" /> : <Login onLoginSuccess={handleLoginSuccess} />} />\n          <Route path=\"/Admin-Home\" element={isAuthenticated ? <AdminHome /> : <Navigate to=\"/login\" />} />\n          <Route path=\"/brands\" element={isAuthenticated ? <BrandList /> : <Navigate to=\"/login\" />} />\n          <Route path=\"/customer-data\" element={isAuthenticated ? <CustomersData /> : <Navigate to=\"/login\" />} />\n          <Route path=\"/order-history\" element={isAuthenticated ? <OrderHistory /> : <Navigate to=\"/login\" />} />\n          <Route path=\"/\" element={<Navigate to={isAuthenticated ? \"/Admin-Home\" : \"/login\"} />} />\n          <Route path=\"/products/:brandID\" element={isAuthenticated ? <ProductList /> : <Navigate to=\"/login\" />} />\n        </Routes>\n      </Suspense>\n    </>\n  );\n};\n\nexport default AdminApp;\n"],"names":["_ref","userName","onLogout","dropdownOpen","setDropdownOpen","useState","location","useLocation","isActive","path","pathname","_jsx","className","children","_jsxs","Link","to","onClick","toggleDropdown","FontAwesomeIcon","icon","faUserCircle","size","AdminHome","lazy","BrandList","CustomersData","OrderHistory","ProductList","Login","Register","AdminApp","customerDetails","setCustomerDetails","username","mobile_number","isAuthenticated","setIsAuthenticated","localStorage","getItem","error","setError","useEffect","async","token","response","fetch","headers","ok","Error","data","json","message","fetchCustomerDetails","_Fragment","AdminNavbar","method","removeItem","console","Suspense","fallback","Routes","Route","element","Navigate","onLoginSuccess","handleLoginSuccess"],"sourceRoot":""}