{"version":3,"file":"static/js/247.9bb9172b.chunk.js","mappings":"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","sources":["components/BasicCustomer/BasicNavbar/BasicNavbar.js","components/BasicCustomer/BasicApp.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { Link, useLocation } from 'react-router-dom';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faUserCircle } from '@fortawesome/free-solid-svg-icons'; // Updated import\r\nimport './BasicNavbar.css';\r\n \r\nfunction BasicNavbar({ userName, onLogout }) {\r\n  const [dropdownOpen, setDropdownOpen] = useState(false);\r\n  const location = useLocation();\r\n \r\n  const toggleDropdown = () => {\r\n    setDropdownOpen(!dropdownOpen);\r\n  };\r\n \r\n  const isActive = (path) => location.pathname === path;\r\n \r\n  return (\r\n    <nav className=\"admin-navbar-b25\">\r\n      <div className=\"navbar-content-b25\">\r\n        <div className=\"user-name-b25\">Welcome {userName}</div>\r\n        <div className=\"menu-buttons-b25\">\r\n          <Link to=\"/bbrands\" className={`menu-button-b25 ${isActive('/bbrands') ? 'active' : ''}`}>Home</Link>\r\n          <Link to=\"/bsupplier\" className={`menu-button-b25 ${isActive('/bsupplier') ? 'active' : ''}`}>Supplier</Link>\r\n          <Link to=\"/bView-Cart\" className={`menu-button-b25 ${isActive('/bView-Cart') ? 'active' : ''}`}>Cart</Link>\r\n          <Link to=\"/border-history\" className={`menu-button-b25 ${isActive('/border-history') ? 'active' : ''}`}>Order History</Link>\r\n         \r\n          <div className=\"profile-icon-b25\" onClick={toggleDropdown}>\r\n            <FontAwesomeIcon icon={faUserCircle} size=\"xl\" />\r\n            {dropdownOpen && (\r\n              <div className=\"dropdown-b25\">\r\n                <div className=\"dropdown-item-b25\">{userName}</div>\r\n                <div className=\"dropdown-item-b25\" onClick={onLogout}>Logout</div>\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n}\r\n \r\nexport default BasicNavbar;","import React, { useEffect, useState, lazy, Suspense } from 'react';\r\nimport { BrowserRouter as Router, Routes, Route, Navigate } from 'react-router-dom';\r\nimport BasicNavbar from './BasicNavbar/BasicNavbar';\r\n\r\n// Lazy load components\r\nconst Register = lazy(() => import('../Customer/Register/Register'));\r\nconst Login = lazy(() => import('../Customer/Login/Login'));\r\nconst BasicViewCart = lazy(() => import('./BasicViewCart/BasicViewCart'));\r\nconst BasicCheckout = lazy(() => import('./BasicCheckout/BasicCheckout'));\r\nconst BasicInvoice = lazy(() => import('./BasicInvoice/BasicInvoice'));\r\nconst BasicBrands = lazy(() => import('./BasicBrands/BasicBrands'));\r\nconst BasicSupplier = lazy(() => import('./BasicSupplier/BasicSupplier'));\r\nconst BasicOrderHistory = lazy(() => import('./BasicOrderHistory/BasicOrderHistory'));\r\n\r\nconst BasicApp = () => {\r\n  const [customerDetails, setCustomerDetails] = useState({ username: '', mobile_number: '' });\r\n  const [isAuthenticated, setIsAuthenticated] = useState(!!localStorage.getItem('authToken'));\r\n  const [error, setError] = useState(null);\r\n\r\n  const fetchCustomerDetails = async () => {\r\n    const token = localStorage.getItem('authToken');\r\n    try {\r\n      const response = await fetch('https://prasad-gz5p.onrender.com/api/user/details/', {\r\n        headers: { 'Authorization': `Token ${token}` },\r\n      });\r\n\r\n      if (!response.ok) {\r\n        throw new Error(`Failed to fetch customer details`);\r\n      }\r\n\r\n      const data = await response.json();\r\n      setCustomerDetails({ username: data.username, mobile_number: data.mobile_number });\r\n    } catch (error) {\r\n      setError(error.message);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (isAuthenticated) {\r\n      fetchCustomerDetails();\r\n    }\r\n  }, [isAuthenticated]);\r\n\r\n  const handleLogout = async () => {\r\n    const token = localStorage.getItem('authToken');\r\n\r\n    try {\r\n      await fetch('https://prasad-gz5p.onrender.com/api/logout/', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Authorization': `Token ${token}`,\r\n          'Content-Type': 'application/json',\r\n        },\r\n      });\r\n      localStorage.removeItem('authToken');\r\n      setIsAuthenticated(false); // Update authentication state\r\n    } catch (error) {\r\n      console.error('Logout failed:', error);\r\n    }\r\n  };\r\n\r\n  const handleLoginSuccess = () => {\r\n    setIsAuthenticated(true);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {isAuthenticated && (\r\n        <BasicNavbar  \r\n          userName={customerDetails.username}\r\n          onLogout={handleLogout}\r\n          className=\"nav-styles\"\r\n        />\r\n      )}\r\n      \r\n      <Suspense fallback={<div>Loading...</div>}>\r\n        <Routes>\r\n          <Route path=\"/\" element={<Navigate to={isAuthenticated ? \"/bbrands\" : \"/login\"} />} />\r\n          <Route path=\"/login\" element={isAuthenticated ? <Navigate to=\"/bbrands\" /> : <Login onLoginSuccess={handleLoginSuccess} />} />\r\n          <Route path=\"/register\" element={<Register />} />\r\n          <Route path=\"/bbrands\" element={isAuthenticated ? <BasicBrands /> : <Navigate to=\"/login\" />} />\r\n          <Route path=\"/border-history\" element={isAuthenticated ? <BasicOrderHistory /> : <Navigate to=\"/login\" />} />\r\n          <Route path=\"/bView-Cart\" element={isAuthenticated ? <BasicViewCart /> : <Navigate to=\"/login\" />} />\r\n          <Route path=\"/bcheckout\" element={isAuthenticated ? <BasicCheckout /> : <Navigate to=\"/login\" />} />\r\n          <Route path=\"/binvoice\" element={isAuthenticated ? <BasicInvoice /> : <Navigate to=\"/login\" />} />\r\n          <Route path=\"/bsupplier\" element={isAuthenticated ? <BasicSupplier /> : <Navigate to=\"/login\" />} />\r\n        </Routes>\r\n      </Suspense>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default BasicApp;\r\n"],"names":["_ref","userName","onLogout","dropdownOpen","setDropdownOpen","useState","location","useLocation","isActive","path","pathname","_jsx","className","children","_jsxs","Link","to","onClick","toggleDropdown","FontAwesomeIcon","icon","faUserCircle","size","Register","lazy","Login","BasicViewCart","BasicCheckout","BasicInvoice","BasicBrands","BasicSupplier","BasicOrderHistory","BasicApp","customerDetails","setCustomerDetails","username","mobile_number","isAuthenticated","setIsAuthenticated","localStorage","getItem","error","setError","useEffect","async","token","response","fetch","headers","ok","Error","data","json","message","fetchCustomerDetails","_Fragment","BasicNavbar","method","removeItem","console","Suspense","fallback","Routes","Route","element","Navigate","onLoginSuccess","handleLoginSuccess"],"sourceRoot":""}