{"version":3,"file":"static/js/323.b15df10d.chunk.js","mappings":"oJAEA,MAiEA,EAjEqBA,KACnB,MAAOC,EAAgBC,IAAqBC,EAAAA,EAAAA,UAAS,KAC9CC,EAAOC,IAAYF,EAAAA,EAAAA,UAAS,OAC5BG,EAASC,IAAcJ,EAAAA,EAAAA,UAAS,OAuBvCK,EAAAA,EAAAA,YAAU,KACJF,GArBsBG,WAC1B,MAAMC,EAAQC,aAAaC,QAAQ,aAEnC,IACE,MAAMC,QAAiBC,MAAM,qDAAqDR,KAAY,CAC5FS,QAAS,CAAE,cAAiB,SAASL,OAGvC,IAAKG,EAASG,GACZ,MAAM,IAAIC,MAAM,2BAGlB,MAAMC,QAAoBL,EAASM,OACnCjB,EAAkBgB,EAAYE,OAAS,GACzC,CAAE,MAAOC,GACPhB,EAASgB,EAAIC,QACf,GAMEC,CAAoBjB,EACtB,GACC,CAACA,IAQJ,OACEkB,EAAAA,EAAAA,MAAA,OAAKC,UAAU,UAASC,SAAA,CACrBtB,IAASuB,EAAAA,EAAAA,KAAA,KAAGF,UAAU,QAAOC,SAAEtB,IAE/BH,EAAe2B,OAAS,GACvBJ,EAAAA,EAAAA,MAAA,OAAAE,SAAA,EACEC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,oBACJC,EAAAA,EAAAA,KAAA,UAAQF,UAAU,mBAAmBI,QAZlBC,KACzB5B,EAAkB,IAClBK,EAAW,KAAK,EAUuDmB,SAAC,mBAGlEC,EAAAA,EAAAA,KAAA,OAAKI,MAAO,CAAEC,QAAS,OAAQC,SAAU,OAAQC,UAAW,QAASR,SAClEzB,EAAekC,KAAI,CAACC,EAAOC,KAC1Bb,EAAAA,EAAAA,MAAA,OAAiBC,UAAU,eAAcC,SAAA,EACvCF,EAAAA,EAAAA,MAAA,MAAAE,SAAA,CAAI,eAAaU,EAAME,eACvBd,EAAAA,EAAAA,MAAA,KAAAE,SAAA,CAAG,aAAWU,EAAMG,aACpBf,EAAAA,EAAAA,MAAA,KAAAE,SAAA,CAAG,gBAASU,EAAMI,iBAHVH,WAShBV,EAAAA,EAAAA,KAAA,KAAAD,SAAG,oEAED,C","sources":["components/BasicCustomer/BasicInvoice/BasicInvoice.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\n\r\nconst BasicInvoice = () => {\r\n  const [invoiceDetails, setInvoiceDetails] = useState([]);\r\n  const [error, setError] = useState(null);\r\n  const [orderId, setOrderId] = useState(null); // State to hold the order ID\r\n\r\n  // Function to fetch invoice details\r\n  const fetchInvoiceDetails = async (orderId) => {\r\n    const token = localStorage.getItem('authToken');\r\n\r\n    try {\r\n      const response = await fetch(`https://prasad-gz5p.onrender.com/api/view-invoice/${orderId}/`, {\r\n        headers: { 'Authorization': `Token ${token}` },\r\n      });\r\n\r\n      if (!response.ok) {\r\n        throw new Error('Failed to fetch invoice');\r\n      }\r\n\r\n      const invoiceData = await response.json();\r\n      setInvoiceDetails(invoiceData.items || []);\r\n    } catch (err) {\r\n      setError(err.message);\r\n    }\r\n  };\r\n\r\n  // Effect to fetch invoice details when orderId is set\r\n  useEffect(() => {\r\n    if (orderId) {\r\n      fetchInvoiceDetails(orderId);\r\n    }\r\n  }, [orderId]);\r\n\r\n  // Handle closing the invoice\r\n  const handleCloseInvoice = () => {\r\n    setInvoiceDetails([]);\r\n    setOrderId(null); // Reset orderId when closing\r\n  };\r\n\r\n  return (\r\n    <div className=\"invoice\">\r\n      {error && <p className=\"error\">{error}</p>}\r\n\r\n      {invoiceDetails.length > 0 ? (\r\n        <div>\r\n          <h3>Order Invoice:</h3>\r\n          <button className=\"view-cart-button\" onClick={handleCloseInvoice}>\r\n            Close Invoice\r\n          </button>\r\n          <div style={{ display: 'flex', flexWrap: 'wrap', marginTop: '20px' }}>\r\n            {invoiceDetails.map((order, index) => (\r\n              <div key={index} className=\"product-card\">\r\n                <h4>Product ID: {order.product_id}</h4>\r\n                <p>Quantity: {order.quantity}</p>\r\n                <p>Price: â‚¹{order.total_price}</p>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      ) : (\r\n        <p>No invoice details available. Please select an order to view.</p>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BasicInvoice;"],"names":["BasicInvoice","invoiceDetails","setInvoiceDetails","useState","error","setError","orderId","setOrderId","useEffect","async","token","localStorage","getItem","response","fetch","headers","ok","Error","invoiceData","json","items","err","message","fetchInvoiceDetails","_jsxs","className","children","_jsx","length","onClick","handleCloseInvoice","style","display","flexWrap","marginTop","map","order","index","product_id","quantity","total_price"],"sourceRoot":""}