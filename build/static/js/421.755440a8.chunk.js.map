{"version":3,"file":"static/js/421.755440a8.chunk.js","mappings":"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","sources":["components/Customer/DotSpinner/DotSpinner.js","components/Customer/ViewCart/ViewCart.js"],"sourcesContent":["import React from 'react';\r\nimport './DotSpinner.css'; // Make sure to import the CSS file\r\n \r\nconst DotSpinner = () => {\r\n  return (\r\n    // <div className=\"dot-spinner-container\">\r\n      <div className=\"dot-spinner\">\r\n        {Array.from({ length: 8 }, (_, index) => (\r\n          <div key={index} className={`dot-spinner__dot dot-spinner__dot--${index + 1}`}></div>\r\n        ))}\r\n      </div>\r\n    // </div>\r\n  );\r\n};\r\n \r\nexport default DotSpinner;\r\n \r\n ","\r\n\r\n\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faTrash } from '@fortawesome/free-solid-svg-icons';\r\nimport './ViewCart.css';\r\nimport DotSpinner from '../DotSpinner/DotSpinner';\r\n\r\nconst Cart = () => {\r\n  const [cart11, setCart11] = useState([]);\r\n  const [customerDetails11, setCustomerDetails11] = useState({ username: '', mobile_number: '' });\r\n  const [error11, setError11] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [quantityMap, setQuantityMap] = useState({});\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    fetchCustomerDetails();\r\n    fetchCart11();\r\n  }, []);\r\n\r\n  const fetchCustomerDetails = async () => {\r\n    const token = localStorage.getItem('authToken');\r\n    try {\r\n      const response = await fetch('https://prasad-gz5p.onrender.com/api/user/details/', {\r\n        headers: { 'Authorization': `Token ${token}` },\r\n      });\r\n\r\n      if (!response.ok) {\r\n        throw new Error(`Failed to fetch customer details`);\r\n      }\r\n\r\n      const data = await response.json();\r\n      setCustomerDetails11({ username: data.username, mobile_number: data.mobile_number });\r\n    } catch (error) {\r\n      setError11(error.message);\r\n    }\r\n  };\r\n\r\n  const fetchCart11 = async () => {\r\n    const token = localStorage.getItem('authToken');\r\n    const mobileNumber = customerDetails11.mobile_number;\r\n\r\n    try {\r\n      setLoading(true);\r\n      const response = await fetch(`https://prasad-gz5p.onrender.com/api/view-cart/?mobile=${mobileNumber}`, {\r\n        headers: { 'Authorization': `Token ${token}` },\r\n      });\r\n\r\n      if (!response.ok) throw new Error(`Failed to fetch cart`);\r\n      const cartData = await response.json();\r\n      setCart11(cartData.cart_items || []);\r\n      const initialQuantities = {};\r\n      cartData.cart_items.forEach(item => {\r\n        initialQuantities[item.productItem.productid] = item.quantity;\r\n      });\r\n      setQuantityMap(initialQuantities);\r\n    } catch (error) {\r\n      console.error(error.message);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleChangeQuantity11 = async (productId, quantity) => {\r\n    const token = localStorage.getItem('authToken');\r\n    const dataToSubmit = { product_id: productId, quantity };\r\n\r\n    try {\r\n      const response = await fetch(`https://prasad-gz5p.onrender.com/api/replace-quantity/${productId}/`, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Authorization': `Token ${token}`,\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify(dataToSubmit),\r\n      });\r\n\r\n      if (!response.ok) throw new Error(`Failed to update cart: ${response.statusText}`);\r\n      setQuantityMap(prev => ({ ...prev, [productId]: quantity }));\r\n    } catch (error) {\r\n      alert('Error: ' + error.message);\r\n    }\r\n  };\r\n\r\n  \r\n\r\n  const handleDeleteItemCart11 = async (productId) => {\r\n    const token = localStorage.getItem('authToken');\r\n  \r\n    try {\r\n      const response = await fetch(`https://prasad-gz5p.onrender.com/api/remove-entire-from-cart/${productId}/`, {\r\n        method: 'DELETE',\r\n        headers: {\r\n          'Authorization': `Token ${token}`,\r\n          'Content-Type': 'application/json',\r\n        },\r\n      });\r\n  \r\n      if (!response.ok) throw new Error(`Failed to remove item from cart: ${response.statusText}`);\r\n      \r\n      // Remove the item from the cart in state without re-fetching\r\n      setCart11(prevCart => prevCart.filter(item => item.productItem.productid !== productId));\r\n      \r\n      // alert('Product removed from cart successfully!');\r\n    } catch (error) {\r\n      alert('Error: ' + error.message);\r\n    }\r\n  };\r\n  \r\n\r\n  const calculateTotalPrice = () => {\r\n    return cart11.reduce((total, item) => {\r\n      const quantity = quantityMap[item.productItem.productid] || item.quantity; // use quantityMap for current quantities\r\n      return total + (item.price * quantity);\r\n    }, 0);\r\n  };\r\n\r\n  const checkout11 = async () => {\r\n    const token = localStorage.getItem('authToken');\r\n    const mobileNumber = customerDetails11.mobile_number;\r\n    const volume = 10; // Replace with actual volume value\r\n\r\n    try {\r\n      const response = await fetch('https://prasad-gz5p.onrender.com/api/checkout/', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Authorization': `Token ${token}`,\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({ mobile_number: mobileNumber, volume }),\r\n      });\r\n\r\n      if (!response.ok) {\r\n        const errorText = await response.text();\r\n        throw new Error(`Checkout failed: ${response.status} - ${response.statusText}`);\r\n      }\r\n\r\n      const result = await response.json();\r\n      alert(`Checkout successful! Invoice ID: ${result.invoice_id}`);\r\n      setCart11([]);\r\n      setQuantityMap({});\r\n    } catch (error) {\r\n      setError11(error.message);\r\n      console.error('Checkout Error:', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"cart-container11\">\r\n        {loading ? (<>\r\n         <div className='cart-spinner11'><DotSpinner /> </div> \r\n          </>\r\n        ) : (\r\n          <>\r\n            <h2>Your Cart</h2>\r\n            <div className=\"btns-total\"> \r\n            <p className='view-cart-total11'>Total Price: ₹{calculateTotalPrice()}</p>\r\n            <div className='btnMain11'>\r\n                <button onClick={fetchCart11} className='view-cart-button11'>Refresh Cart</button>\r\n                <button onClick={checkout11} className='view-cart-button11-checkout' disabled={cart11.length === 0}>Checkout</button>\r\n                <button onClick={() => navigate('/order-history')} className='view-cart-button11'>Order History</button>\r\n              </div>\r\n            </div>\r\n            <div className=\"cart-section11\">\r\n              {cart11.length > 0 ? (\r\n                <ul>\r\n                  {cart11.map((item) => (\r\n                    item && item.productItem && (\r\n                      <li key={item.productItem.productid}>\r\n                        <div className='view-cart-item11'>\r\n                          <div className='image_container11'>\r\n                          \r\n                        <img\r\n                          src={item.productItem?.productImage }\r\n                         // src={ 'https://cdn.britannica.com/34/176234-050-0E0C55C6/Glass-milk.jpg'}\r\n                          alt={item.product_name}\r\n                          className=\"image333\"\r\n                          \r\n                        />\r\n                          </div>\r\n                          <div><strong>Category: {item.productItem?.productCategory || 'N/A'}</strong></div>\r\n                        <div className='volumev210'>Type: {item.productItem?.productType || 'N/A'}</div>\r\n                        <div className='volumev210'>Volume: {item.productItem?.productVolume || 'N/A'}</div>\r\n                          <div>Price of Product: ₹{item.price}</div>\r\n                          <div style={{ display: 'flex', alignItems: 'center' ,marginRight:\"20px\"}}>\r\n                           \r\n\r\n<span>{item.product_name} Quantity: </span>\r\n    <input\r\n      type=\"number\"\r\n      min=\"1\"\r\n      value={quantityMap[item.productItem.productid] || item.quantity}\r\n      onChange={(e) => {\r\n        const quantity = parseInt(e.target.value) || 1; \r\n        handleChangeQuantity11(item.productItem.productid, quantity);\r\n      }}\r\n      style={{ width: '60px', marginLeft: '10px' }} // Changed marginRight to marginLeft\r\n    />\r\n                            \r\n                          </div>\r\n                          <div>Total Price of Product: ₹{item.price * (quantityMap[item.productItem.productid] || item.quantity)}</div>\r\n                          <button className='icon-remove11' onClick={() => handleDeleteItemCart11(item.productItem.productid)}>\r\n                            <FontAwesomeIcon icon={faTrash} /> Remove\r\n                          </button>\r\n                        </div>\r\n                      </li>\r\n                    )\r\n                  ))}\r\n                </ul>\r\n              ) : (\r\n                <p>Your cart is empty</p>\r\n              )}\r\n\r\n              \r\n\r\n              {error11 && <p className=\"error11\">{error11}</p>}\r\n            </div>\r\n            \r\n          </>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Cart;\r\n\r\n\r\n\r\n\r\n\r\n"],"names":["DotSpinner","_jsx","className","children","Array","from","length","_","index","Cart","cart11","setCart11","useState","customerDetails11","setCustomerDetails11","username","mobile_number","error11","setError11","loading","setLoading","quantityMap","setQuantityMap","navigate","useNavigate","useEffect","fetchCustomerDetails","fetchCart11","async","token","localStorage","getItem","response","fetch","headers","ok","Error","data","json","error","message","mobileNumber","cartData","cart_items","initialQuantities","forEach","item","productItem","productid","quantity","console","_Fragment","_jsxs","reduce","total","price","onClick","method","body","JSON","stringify","volume","text","status","statusText","result","alert","invoice_id","disabled","map","_item$productItem","_item$productItem2","_item$productItem3","_item$productItem4","src","productImage","alt","product_name","productCategory","productType","productVolume","style","display","alignItems","marginRight","type","min","value","onChange","e","parseInt","target","productId","dataToSubmit","product_id","prev","handleChangeQuantity11","width","marginLeft","prevCart","filter","handleDeleteItemCart11","FontAwesomeIcon","icon","faTrash"],"sourceRoot":""}