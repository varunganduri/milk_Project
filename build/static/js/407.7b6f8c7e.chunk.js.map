{"version":3,"file":"static/js/407.7b6f8c7e.chunk.js","mappings":"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","sources":["components/BasicCustomer/BasicDotSpinner/BasicDotSpinner.js","components/BasicCustomer/BasicSupplier/BasicSupplier.js"],"sourcesContent":["import React from 'react';\r\nimport './BasicDotSpinner.css'; // Make sure to import the CSS file\r\n \r\nconst BasicDotSpinner = () => {\r\n  return (\r\n    // <div className=\"dot-spinner-container\">\r\n      <div className=\"dot-spinnerb26\">\r\n        {Array.from({ length: 8 }, (_, index) => (\r\n          <div key={index} className={`dot-spinner__dotb26 dot-spinner__dotb26--${index + 1}`}></div>\r\n        ))}\r\n      </div>\r\n    // </div>\r\n  );\r\n};\r\n \r\nexport default BasicDotSpinner;","import React, { useEffect, useState, useRef } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport './BasicSupplier.css';\r\nimport DotSpinner from '../BasicDotSpinner/BasicDotSpinner';\r\n\r\nconst BasicSupplier = () => {\r\n  const [supplierData, setSupplierData] = useState([]);\r\n  const [filteredSuppliers, setFilteredSuppliers] = useState([]);\r\n  const [selectedSupplier, setSelectedSupplier] = useState({ mobile_number: '' });\r\n  const [error, setError] = useState(null);\r\n  const [searchQuery, setSearchQuery] = useState('');\r\n  const [dropdownOpen, setDropdownOpen] = useState(false);\r\n  const [products, setProducts] = useState([]);\r\n  const [loadingSupplierData, setLoadingSupplierData] = useState(false);\r\n  const [loadingCustomerProducts, setLoadingCustomerProducts] = useState(false);\r\n  const dropdownRef = useRef(null);\r\n  const navigate = useNavigate();\r\n  const [snackbarMessage, setSnackbarMessage] = useState('');\r\n\r\n  useEffect(() => {\r\n    const handleClickOutside = (event) => {\r\n      if (dropdownRef.current && !dropdownRef.current.contains(event.target)) {\r\n        setDropdownOpen(false);\r\n      }\r\n    };\r\n\r\n    document.addEventListener('mousedown', handleClickOutside);\r\n\r\n    return () => {\r\n      document.removeEventListener('mousedown', handleClickOutside);\r\n    };\r\n  }, [dropdownRef]);\r\n\r\n  useEffect(() => {\r\n    const token = localStorage.getItem('authToken');\r\n    if (!token) {\r\n      navigate('/login');\r\n      return;\r\n    }\r\n\r\n    const fetchSupplierData = async () => {\r\n      setLoadingSupplierData(true);\r\n      try {\r\n        const response = await fetch('https://prasad-gz5p.onrender.com/api/get-suppliers/', {\r\n          headers: { 'Authorization': `Token ${token}` },\r\n        });\r\n\r\n        if (!response.ok) {\r\n          throw new Error(`Failed to fetch supplier data`);\r\n        }\r\n        const data = await response.json();\r\n        const suppliers = data.suppliers || [];\r\n        setSupplierData(suppliers);\r\n        setFilteredSuppliers(suppliers);\r\n      } catch (error) {\r\n        setError(error.message);\r\n      }\r\n      finally {\r\n        setLoadingSupplierData(false);\r\n      }\r\n    };\r\n    fetchSupplierData();\r\n  }, [navigate]);\r\n\r\n  useEffect(() => {\r\n    const filtered = supplierData.filter(supplier =>\r\n      supplier.includes(searchQuery) // Search by mobile number\r\n    );\r\n    setFilteredSuppliers(filtered);\r\n  }, [searchQuery, supplierData]);\r\n\r\n  const handleSelectSupplier = (supplier) => {\r\n    setSelectedSupplier({ mobile_number: supplier });\r\n    setDropdownOpen(false);\r\n  };\r\n\r\n  const fetchProducts = async (supplierMobile) => {\r\n    const token = localStorage.getItem('authToken');\r\n    setLoadingCustomerProducts(true);\r\n    try {\r\n      const response = await fetch(`https://prasad-gz5p.onrender.com/api/productslist/?supplier=${supplierMobile}`, {\r\n        headers: { 'Authorization': `Token ${token}` },\r\n      });\r\n\r\n      if (!response.ok) {\r\n        throw new Error(`Failed to fetch products`);\r\n      }\r\n\r\n      const data = await response.json();\r\n      setProducts(data.products);\r\n    } catch (error) {\r\n      setError(error.message);\r\n    }\r\n    finally {\r\n      setLoadingCustomerProducts(false);\r\n    }\r\n  };\r\n\r\n  if (error) {\r\n    return <div className=\"error-message\">Error: {error}</div>;\r\n  }\r\n\r\n  const handleSupplierSubmit = async () => {\r\n    const token = localStorage.getItem('authToken');\r\n\r\n    const payload = {\r\n      supplier_mobile_number: selectedSupplier.mobile_number,\r\n\r\n    };\r\n\r\n    try {\r\n      const response = await fetch('https://prasad-gz5p.onrender.com/api/select-supplier/', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Authorization': `Token ${token}`,\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify(payload),\r\n      });\r\n\r\n      if (!response.ok) {\r\n        setSnackbarMessage('Please Select supplier.');\r\n        setTimeout(() => setSnackbarMessage(''), 3000);\r\n        return;\r\n      }\r\n\r\n      setSnackbarMessage('Supplier details submitted successfully!');\r\n      setTimeout(() => setSnackbarMessage(''), 3000);\r\n\r\n      await fetchProducts(selectedSupplier.supplier);\r\n    } catch (error) {\r\n      setError(error.message);\r\n    }\r\n  };\r\n\r\n  const handleAddToCart = async (productId, quantity, price) => {\r\n    console.log(\"Adding to cart:\", { product_id: productId, quantity, price });\r\n    const frice = parseInt(price);\r\n    const token = localStorage.getItem('authToken');\r\n\r\n    const dataToSubmit = {\r\n      product_id: productId,\r\n      quantity: quantity,\r\n      price: frice\r\n    };\r\n\r\n    try {\r\n      const response = await fetch(`https://prasad-gz5p.onrender.com/api/add-to-cart/${productId}/`, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Authorization': `Token ${token}`,\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify(dataToSubmit),\r\n      });\r\n\r\n      if (!response.ok) {\r\n        throw new Error(`Failed to add to cart: ${response.statusText}`);\r\n      }\r\n      setSnackbarMessage('Product added to cart successfully!');\r\n      setTimeout(() => setSnackbarMessage(''), 3000);\r\n\r\n    } catch (error) {\r\n      alert('Error: ' + error.message);\r\n    }\r\n  };\r\n\r\n  const handleQuantityChange = (productId, change) => {\r\n    const quantityInput = document.getElementById(`quantity-${productId}`);\r\n    let currentQuantity = parseInt(quantityInput.value) || 1;\r\n    currentQuantity += change;\r\n    if (currentQuantity < 1) {\r\n      currentQuantity = 1;\r\n    }\r\n    quantityInput.value = currentQuantity;\r\n  };\r\n\r\n  const handleResetSelection1 = () => {\r\n    setSelectedSupplier({ mobile_number: '' });\r\n    setProducts([]);\r\n  };\r\n  return (\r\n    <div className=\"supplier-homebsz84\">\r\n      {error && <p className=\"error-messagebsz84\">{error}</p>}\r\n      {snackbarMessage && (\r\n        <div className=\"snackbar show\">\r\n          {snackbarMessage}\r\n        </div>\r\n      )}\r\n      <h2 className='sup-headbsz84'>Suppliers</h2>\r\n      <div className=\"supplier-sectionbsz84\">\r\n        <div className=\"dropdownbsz84\" ref={dropdownRef}>\r\n          <button onClick={() => setDropdownOpen(!dropdownOpen)} className=\"dropdown-togglebsz84\">\r\n            {selectedSupplier.mobile_number\r\n              ? `${selectedSupplier.mobile_number}`\r\n              : 'Select a Supplier'}\r\n            {selectedSupplier.mobile_number && (\r\n              <span className=\"crossmarkbsz84\" onClick={(e) => {\r\n                e.stopPropagation();\r\n                handleResetSelection1();\r\n              }}>\r\n                &times;\r\n              </span>\r\n            )}\r\n          </button>\r\n          {dropdownOpen && (\r\n            <div className=\"dropdown-menubsz84\">\r\n              <input\r\n                type=\"text\"\r\n                placeholder=\"Search by name or mobile number\"\r\n                value={searchQuery}\r\n                onChange={(e) => setSearchQuery(e.target.value)}\r\n                className=\"search-inputbsz84\"\r\n              />\r\n              <div className=\"supplier-list-container21\">\r\n                {loadingSupplierData ? (\r\n                  <div style={{ display: 'flex', justifyContent: 'center', alignItems: 'center', height: '10vh' }}>\r\n                    <div className=\"loaderbsz84\">Loading Suppliers...</div>\r\n                  </div>\r\n                ) : (\r\n                  <ul className=\"supplier-listbsz84\">\r\n                    {filteredSuppliers.length ? (\r\n                      filteredSuppliers.map((supplier, index) => (\r\n                        <li key={index} onClick={() => handleSelectSupplier(supplier)}>\r\n                          {supplier}\r\n                        </li>\r\n                      ))\r\n                    ) : (\r\n                      <p className=\"no-suppliersbsz84\">No suppliers found</p>\r\n                    )}\r\n                  </ul>\r\n                )}\r\n              </div>\r\n            </div>\r\n          )}\r\n        </div>\r\n        <button onClick={handleSupplierSubmit} className=\"btn-submitbsz84\">\r\n          Submit Supplier\r\n        </button>\r\n      </div>\r\n\r\n      {!selectedSupplier.mobile_number && (\r\n        <div className='n0-selectedbsz84'>\r\n          <p>No Supplier Selected</p>\r\n        </div>\r\n      )}\r\n      {loadingCustomerProducts ? (\r\n        <div style={{\r\n          display: 'flex', justifyContent: 'center', alignItems: 'center',\r\n          height: '50vh'\r\n        }}>\r\n          <DotSpinner />\r\n          {/* <p>loading....</p> */}\r\n        </div>\r\n      ) : products.length > 0 && (\r\n        <div className=\"product-card-containerbsz84\">\r\n          {products.map((product, index) => (\r\n            <div key={index} className=\"cardbsz84\">\r\n              <div className=\"image_containerbsz84\">\r\n                <img src={product.image_url} alt={product.description} className=\"imagebsz84\" />\r\n              </div>\r\n              <div className=\"bottom-sectionbsz84\">\r\n                <div className=\"titlebsz84\">\r\n                  <p><span>{product.category}</span></p>\r\n                </div>\r\n                <div className=\"descriptionbsz84\">\r\n                  <p>{product.description}</p>\r\n                </div>\r\n                <div className=\"volumebsz84\">\r\n                  <span className=\"qty\">Volume: <span className=\"volume-valuebsz84\">{product.volume}</span></span>\r\n                </div>\r\n                <div className=\"quantitybsz84\">\r\n                  <span className=\"qty\">Quantity</span>\r\n                  <button className=\"volume-buttonbsz84\" onClick={() => handleQuantityChange(product.id, -1)}>-</button>\r\n                  <input\r\n                    type=\"number\"\r\n                    min=\"1\"\r\n                    defaultValue=\"1\"\r\n                    className=\"inputBoxbsz84\"\r\n                    id={`quantity-${product.id}`}\r\n                  />\r\n                  <button className=\"volume-buttonbsz84\" onClick={() => handleQuantityChange(product.id, 1)}>+</button>\r\n                </div>\r\n                <div className=\"actionbsz84\">\r\n                  <div className=\"pricebsz84\">\r\n                    <span>₹{product.Final_Price}</span>\r\n                  </div>\r\n                  <button className=\"cart-buttonbsz84\" onClick={() => {\r\n                    const quantity = parseInt(document.getElementById(`quantity-${product.id}`).value) || 1;\r\n                    handleAddToCart(product.id, quantity, product.Final_Price);\r\n                  }}>\r\n                    <svg className=\"cart-iconbsz84\" stroke=\"currentColor\" strokeWidth=\"1.5\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                      <path d=\"M2.25 3h1.386c.51 0 .955.343 1.087.835l.383 1.437M7.5 14.25a3 3 0 0 0-3 3h15.75m-12.75-3h11.218c1.121-2.3 2.1-4.684 2.924-7.138a60.114 60.114 0 0 0-16.536-1.84M7.5 14.25 5.106 5.272M6 20.25a.75.75 0 1 1-1.5 0 .75.75 0 0 1 1.5 0Zm12.75 0a.75.75 0 1 1-1.5 0 .75.75 0 0 1 1.5 0Z\" strokeLinejoin=\"round\" strokeLinecap=\"round\"></path>\r\n                    </svg>\r\n                    <span>Add to cart</span>\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\nexport default BasicSupplier;\r\n"],"names":["BasicDotSpinner","_jsx","className","children","Array","from","length","_","index","BasicSupplier","supplierData","setSupplierData","useState","filteredSuppliers","setFilteredSuppliers","selectedSupplier","setSelectedSupplier","mobile_number","error","setError","searchQuery","setSearchQuery","dropdownOpen","setDropdownOpen","products","setProducts","loadingSupplierData","setLoadingSupplierData","loadingCustomerProducts","setLoadingCustomerProducts","dropdownRef","useRef","navigate","useNavigate","snackbarMessage","setSnackbarMessage","useEffect","handleClickOutside","event","current","contains","target","document","addEventListener","removeEventListener","token","localStorage","getItem","async","response","fetch","headers","ok","Error","suppliers","json","message","fetchSupplierData","filtered","filter","supplier","includes","_jsxs","handleQuantityChange","productId","change","quantityInput","getElementById","currentQuantity","parseInt","value","ref","onClick","e","stopPropagation","type","placeholder","onChange","style","display","justifyContent","alignItems","height","map","handleSelectSupplier","payload","supplier_mobile_number","method","body","JSON","stringify","setTimeout","supplierMobile","data","fetchProducts","DotSpinner","product","src","image_url","alt","description","category","volume","id","min","defaultValue","Final_Price","quantity","price","console","log","product_id","frice","dataToSubmit","statusText","alert","handleAddToCart","stroke","strokeWidth","viewBox","fill","xmlns","d","strokeLinejoin","strokeLinecap"],"sourceRoot":""}